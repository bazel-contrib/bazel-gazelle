module(
    name = "gazelle",
    version = "0.28.0",
    repo_name = "bazel_gazelle",
)

print("WARNING: The bazel_gazelle Bazel module is still highly experimental and subject to change at any time. Only use it to try out bzlmod for now.")

bazel_dep(name = "auto_use_repo", version = "", dev_dependency = True)
git_override(
    module_name = "auto_use_repo",
    commit = "a384d785afefcc3d656a23b6c0f3ab8a3885f05a",
    remote = "https://github.com/fmeum/auto_use_repo",
)

bazel_dep(name = "bazel_skylib", version = "1.3.0")
bazel_dep(name = "protobuf", version = "3.19.6", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_go", version = "0.37.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_proto", version = "4.0.0")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

# Known to exist since it is instantiated by rules_go itself.
use_repo(go_sdk, "go_default_sdk")

non_module_deps = use_extension("//internal/bzlmod:non_module_deps.bzl", "non_module_deps")
use_repo(
    non_module_deps,
    "bazel_gazelle_go_repository_cache",
    "bazel_gazelle_go_repository_config",
    "bazel_gazelle_go_repository_tools",
)

rules_go_non_module_deps = use_extension("@io_bazel_rules_go//go/private:extensions.bzl", "non_module_dependencies")
use_repo(rules_go_non_module_deps, "go_googleapis")

go_deps = use_extension("//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    # Used internally by the go_deps module extension.
    "bazel_gazelle_go_repository_directives",
    # Used by auto_use_repo.
    "bazel_gazelle_auto_use_repo",
    # Maintained by auto_use_repo.
    "com_github_bazelbuild_buildtools",
    "com_github_bmatcuk_doublestar_v4",
    "com_github_fsnotify_fsnotify",
    "com_github_google_go_cmp",
    "com_github_pelletier_go_toml",
    "com_github_pmezard_go_difflib",
    "org_golang_x_mod",
    "org_golang_x_sync",
    "org_golang_x_tools",
)

auto_use_repo = use_extension("@auto_use_repo//:extensions.bzl", "auto_use_repo")
auto_use_repo.register(
    extension_bzl_file = "//:extensions.bzl",
    extension_name = "go_deps",
    repositories_json_file = "@bazel_gazelle_auto_use_repo//:repositories.json",
)
